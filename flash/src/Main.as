package  {	import flash.display.MovieClip;	import com.greensock.loading.LoaderMax;	import com.greensock.loading.DataLoader;	import com.greensock.events.LoaderEvent;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import net.hires.debug.Stats;	import flash.utils.Timer;	import flash.events.TimerEvent;		public class Main extends MovieClip{		private var _slidesContainer:SlidesContainer;		private var _jsonLoader : DataLoader;		private var _datas : Vector.<EntryPointData>;		private var _currentIdx:int;		private var _currentEntryPoint:EntryPointData;		public var time : Number;		private var _timer : Timer;				public function Main() {			_init();		}				private function _init(){			addChild(new Stats());			_slidesContainer = this["slidesContainer"];						_timer = new Timer(2000,0);			_timer.addEventListener(TimerEvent.TIMER,_onTick);			// Navigator debug console, very nice for development. Toggle with the tilde key, "~". You can type in new states by hand!						_jsonLoader = new DataLoader("DonneesBus.json", {overwrite:true, onComplete:_onJsonLoaded});			_jsonLoader.load(true);			stage.addEventListener(KeyboardEvent.KEY_DOWN, _onKeyDown);		}				private function _onJsonLoaded(e:LoaderEvent):void{			var json : Object = JSON.parse(DataLoader(e.target).content).travel;			_datas = new Vector.<EntryPointData>(false);			for each(var o in json){				var entry : EntryPointData = new EntryPointData(o.nextDelay * 1000 || NaN,o.labelName as String || "nolabel");				_datas.push(entry);				//trace(entry.manual,entry.typeOfPoint,entry.labelName);			}			_update();		}				private function _onKeyDown(e:KeyboardEvent):void{			switch(e.keyCode){				case Keyboard.LEFT:					_prev();				break;				case Keyboard.RIGHT:					_next();				break;				default:			}		}				private function _next():void{			if(_currentIdx + 1 < _datas.length)				_currentIdx++			else				return;			//trace("next",_currentIdx);			_update();		}				private function _prev():void{			if(_currentIdx - 1 >= 0) 				_currentIdx--;			else 				return;			//trace("prev",_currentIdx);			_update();		}				private function _update():void{			_currentEntryPoint = _datas[_currentIdx];			_slidesContainer.goto(_currentEntryPoint.labelName);			if(!isNaN(_currentEntryPoint.nextDelay)){				_timer.stop();				_timer.delay = _currentEntryPoint.nextDelay;				_timer.start();			}else{				_timer.stop();			}		}				private function _onTick(e:TimerEvent):void{			_next();		}	}	}